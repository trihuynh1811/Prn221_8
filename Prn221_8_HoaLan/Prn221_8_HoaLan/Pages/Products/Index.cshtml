@page
@model Prn221_8_HoaLan.Pages.Products.IndexModel
@using DataAccessLayer.Model;
@using Newtonsoft.Json;
@{
    ViewData["Title"] = "Index";
    Layout = "_Layout";
}

<h1>Your Products</h1>

<p>
    <a asp-page="./ProductRegister" class="mb-3 text-decoration-underline text-primary">Create New</a>
</p>

<table class="table" style="table-layout: fixed">
    <thead class="text-center">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Status)
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody class="text-center">
        @foreach (var item in Model.Products)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td class="overflow-hidden" style="white-space: nowrap; text-overflow: ellipsis;" title="@item.Description">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    <a asp-page="./Edit" class="text-decoration-underline text-primary" asp-route-id="@item.ProductId">Edit</a>
                    |
                    <a asp-page="./Detail" class="text-decoration-underline text-primary" asp-route-id="@item.ProductId">Details</a>
                    @*                     |
                <a asp-page="./Delete" asp-route-id="@item.ProductId">Delete</a> *@
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevdisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
    var nextdisabled = !Model.Products.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-pageindex="@(Model.Products.PageIndex - 1)"
   class="btn btn-primary @prevdisabled">
    previous
</a>
<a asp-page="./Index"
   asp-route-pageindex="@(Model.Products.PageIndex + 1)"
   class="btn btn-primary @nextdisabled">
    next
</a>
